// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=loadRAM512n0, b=loadRAM512n1, c=loadRAM512n2, d=loadRAM512n3, e=loadRAM512n4, f=loadRAM512n5, g=loadRAM512n6, h=loadRAM512n7);

    RAM512(in=in, load=loadRAM512n0, address=address[0..8], out=outRAM512n0);
    RAM512(in=in, load=loadRAM512n1, address=address[0..8], out=outRAM512n1);
    RAM512(in=in, load=loadRAM512n2, address=address[0..8], out=outRAM512n2);
    RAM512(in=in, load=loadRAM512n3, address=address[0..8], out=outRAM512n3);
    RAM512(in=in, load=loadRAM512n4, address=address[0..8], out=outRAM512n4);
    RAM512(in=in, load=loadRAM512n5, address=address[0..8], out=outRAM512n5);
    RAM512(in=in, load=loadRAM512n6, address=address[0..8], out=outRAM512n6);
    RAM512(in=in, load=loadRAM512n7, address=address[0..8], out=outRAM512n7);

    Mux8Way16(a=outRAM512n0, b=outRAM512n1, c=outRAM512n2, d=outRAM512n3, e=outRAM512n4, f=outRAM512n5, g=outRAM512n6, h=outRAM512n7, sel=address[9..11], out=out);
}